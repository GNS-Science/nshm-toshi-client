# Generated by ariadne-codegen
# Source: queries.graphql

from typing import Annotated, Any, List, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel


class FileDetailsQuery(BaseModel):
    node: Optional[
        Annotated[
            Union[
                "FileDetailsQueryNodeNode",
                "FileDetailsQueryNodeFileInterface",
                "FileDetailsQueryNodeInversionSolutionNrml",
            ],
            Field(discriminator="typename__"),
        ]
    ]


class FileDetailsQueryNodeNode(BaseModel):
    typename__: Literal[
        "AggregateInversionSolution",
        "AutomationTask",
        "File",
        "GeneralTask",
        "InversionSolution",
        "Node",
        "ObjectIdentity",
        "OpenquakeHazardConfig",
        "OpenquakeHazardSolution",
        "OpenquakeHazardTask",
        "RuptureGenerationTask",
        "ScaledInversionSolution",
        "SmsFile",
        "StrongMotionStation",
        "Table",
        "TimeDependentInversionSolution",
    ] = Field(alias="__typename")
    id: str


class FileDetailsQueryNodeFileInterface(BaseModel):
    typename__: Literal["FileInterface"] = Field(alias="__typename")
    id: Optional[str]
    file_name: Optional[str]
    file_size: Optional[Any]
    md_5_digest: Optional[str] = Field(alias="md5_digest")
    meta: Optional[List[Optional["FileDetailsQueryNodeFileInterfaceMeta"]]]


class FileDetailsQueryNodeFileInterfaceMeta(BaseModel):
    k: Optional[str]
    v: Optional[str]


class FileDetailsQueryNodeInversionSolutionNrml(BaseModel):
    typename__: Literal["InversionSolutionNrml"] = Field(alias="__typename")
    id: str
    file_name: Optional[str]
    file_size: Optional[Any]
    md_5_digest: Optional[str] = Field(alias="md5_digest")
    meta: Optional[List[Optional["FileDetailsQueryNodeInversionSolutionNrmlMeta"]]]
    created: Optional[Any]
    source_solution: Optional[
        Annotated[
            Union[
                "FileDetailsQueryNodeInversionSolutionNrmlSourceSolutionAggregateInversionSolution",
                "FileDetailsQueryNodeInversionSolutionNrmlSourceSolutionInversionSolution",
                "FileDetailsQueryNodeInversionSolutionNrmlSourceSolutionScaledInversionSolution",
                "FileDetailsQueryNodeInversionSolutionNrmlSourceSolutionTimeDependentInversionSolution",
            ],
            Field(discriminator="typename__"),
        ]
    ]


class FileDetailsQueryNodeInversionSolutionNrmlMeta(BaseModel):
    k: Optional[str]
    v: Optional[str]


class FileDetailsQueryNodeInversionSolutionNrmlSourceSolutionAggregateInversionSolution(
    BaseModel
):
    typename__: Literal["AggregateInversionSolution"] = Field(alias="__typename")
    id: str


class FileDetailsQueryNodeInversionSolutionNrmlSourceSolutionInversionSolution(
    BaseModel
):
    typename__: Literal["InversionSolution"] = Field(alias="__typename")
    id: str


class FileDetailsQueryNodeInversionSolutionNrmlSourceSolutionScaledInversionSolution(
    BaseModel
):
    typename__: Literal["ScaledInversionSolution"] = Field(alias="__typename")
    id: str


class FileDetailsQueryNodeInversionSolutionNrmlSourceSolutionTimeDependentInversionSolution(
    BaseModel
):
    typename__: Literal["TimeDependentInversionSolution"] = Field(alias="__typename")
    id: str


FileDetailsQuery.model_rebuild()
FileDetailsQueryNodeFileInterface.model_rebuild()
FileDetailsQueryNodeInversionSolutionNrml.model_rebuild()
